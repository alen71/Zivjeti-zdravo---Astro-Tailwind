---
import { dateFormat } from '@/utils/helper'
import { Image } from 'astro:assets'
import { twMerge } from 'tailwind-merge'
import CategoryTag from './CategoryTag.astro'
import { getFeaturedImage } from '@/lib/media'
import { getCategoryById } from '@/lib/categories'

interface Props extends IPost {
  cardContainerClass?: string
  className?: string
  imgContainerClass?: string
}

const {
  title,
  featured_media,
  categories,
  date,
  link,
  slug,
  imgContainerClass
}: Props = Astro.props

const featuredImage = await getFeaturedImage(featured_media)

const postCategories = await Promise.all(
  categories.map(async category => {
    const data = await getCategoryById(category)

    return data
  })
)
---

<article class="flex flex-col gap-5">
  <a href={`/${slug}`}>
    <div
      class={twMerge(
        'h-60 overflow-hidden rounded-md 2xl:h-72',
        imgContainerClass
      )}
    >
      <Image
        width={700}
        height={300}
        src={featuredImage.source_url}
        alt={title.rendered}
        decoding="async"
        loading="lazy"
        format="webp"
        class="h-full w-full object-cover object-center"
      />
    </div>
  </a>

  <div class="">
    <div class="flex items-center">
      <div class="flex">
        {postCategories.map(category => <CategoryTag category={category} />)}
      </div>
      <p class="text-sm text-dark-gray">{dateFormat(date)}</p>
    </div>
    <a href={link}>
      <h2 class="mt-6 text-2xl">{title.rendered}</h2>
    </a>
  </div>
</article>

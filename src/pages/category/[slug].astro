---
export const prerender = true
import BaseLayout from '../../layouts/BaseLayout.astro'
import CategoriesAside from '../../components/CategoriesAside.astro'
import Card from '@/components/Card.astro'
import type { Code } from 'astro:components'

export interface ICategoryList extends ICategory {
  childCategories?: ICategory[]
}

export async function getStaticPaths() {
  const res = await fetch(
    'https://wp.zivjetizdravo.com/wp-json/wp/v2/categories?per_page=20'
  )

  const categories: ICategory[] = await res.json()

  const mainCategories: ICategoryList[] = categories.filter(category => {
    const childCategories = categories.filter(
      childCategory =>
        childCategory.parent !== 0 && childCategory.parent === category.id
    )

    if (category.parent === 0 && category.id !== 1)
      return { ...category, childCategories }
  })

  const paths = categories.map(category => {
    return {
      params: {
        slug: category.slug
      },
      props: { categories: mainCategories }
    }
  })

  return paths
}

const { slug } = Astro.params
const { categories } = Astro.props

const curCategoryRes = await fetch(
  `https://wp.zivjetizdravo.com/wp-json/wp/v2/categories?slug=${slug}`
)
const curCategory: ICategory[] = await curCategoryRes.json()

const category = curCategory[0]

console.log(category.id)

const postsRes = await fetch(
  `https://wp.zivjetizdravo.com/wp-json/wp/v2/posts?categories=${category.id}`
)
const posts: IPost[] = await postsRes.json()
---

<BaseLayout>
  <div class="grid grid-cols-[1fr_20rem] gap-24">
    <div class="flex flex-col gap-20">
      {posts.map(post => <Card {...post} imgContainerClass="h-[30rem]" />)}
    </div>

    <aside class="flex flex-col">
      <CategoriesAside categories={categories} urlSlug={slug} />
    </aside>
  </div>
</BaseLayout>
